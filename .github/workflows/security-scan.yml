name: Security Scan

on:
  workflow_call:
    inputs:
      scan-target:
        description: 'Target to scan (e.g., . for current repo)'
        required: false
        default: '.'
        type: string
      upload-artifact:
        description: 'Upload scan results as artifact'
        required: false
        default: true
        type: boolean
    outputs:
      scan-result:
        description: 'Security scan result status'
        value: ${{ jobs.security-scan.outputs.result }}
      scan-timestamp:
        description: 'Timestamp when scan was performed'
        value: ${{ jobs.security-scan.outputs.timestamp }}

jobs:
  security-scan:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.scan.outputs.result }}
      timestamp: ${{ steps.scan.outputs.timestamp }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run dummy security scan
        id: scan
        run: |
          echo "Starting security scan..."
          TIMESTAMP=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          echo "timestamp=${TIMESTAMP}" >> $GITHUB_OUTPUT
          
          # Dummy security checks
          echo "🔍 Scanning for secrets..."
          if grep -r "password\|api_key\|secret" . --include="*.py" --include="*.js" --include="*.ts" --include="*.json" --include="*.yaml" --include="*.yml" 2>/dev/null | grep -v node_modules | grep -v ".git" | head -5; then
            echo "⚠️  Potential secrets found (dummy check)"
            echo "result=warning" >> $GITHUB_OUTPUT
          else
            echo "✅ No obvious secrets found"
            echo "result=passed" >> $GITHUB_OUTPUT
          fi
          
          # Dummy dependency check
          echo ""
          echo "🔍 Checking for known vulnerability patterns..."
          echo "✅ No critical vulnerabilities detected"
          
          # Count files scanned
          FILE_COUNT=$(find . -type f \( -name "*.py" -o -name "*.js" -o -name "*.ts" -o -name "*.java" -o -name "*.go" \) 2>/dev/null | grep -v node_modules | grep -v ".git" | wc -l)
          echo ""
          echo "📊 Scanned ${FILE_COUNT} source files"
          echo "Scan completed at ${TIMESTAMP}"

      - name: Generate scan report
        if: always()
        run: |
          cat > security-scan-report.txt << 'EOF'
          ============================================
          Security Scan Report
          ============================================
          
          Repository: ${{ github.repository }}
          Commit: ${{ github.sha }}
          Branch: ${{ github.ref_name }}
          Scan Timestamp: ${{ steps.scan.outputs.timestamp }}
          Scan Result: ${{ steps.scan.outputs.result }}
          
          ============================================
          Checks Performed:
          ============================================
          ✓ Secret scanning
          ✓ Dependency vulnerability screening
          ✓ Source code pattern analysis
          ✓ Common security issues check
          
          ============================================
          Result:
          ============================================
          ${{ steps.scan.outputs.result == 'passed' && 'PASSED - No security issues detected' || 'WARNING - Review findings above' }}
          
          EOF
          cat security-scan-report.txt

      - name: Upload scan report
        if: inputs.upload-artifact == true
        uses: actions/upload-artifact@v4
        with:
          name: security-scan-report
          path: security-scan-report.txt
          retention-days: 30
